FUNCTION_BLOCK CurvaFiltroCompraIbsen

VAR_INPUT
AD: REAL;
BearsP: REAL;
BBDeltaV: REAL;
CCI: REAL;
AC: REAL;
END_VAR

VAR_OUTPUT
saida: REAL;
END_VAR

FUZZIFY AD
RANGE := (-300000.000 .. 0.000);
TERM ADBom := Bell (-185174.000, 17000.000, 1.000);
TERM ADRuim := Bell (-208706.000, 15000.000, 1.000);
END_FUZZIFY

FUZZIFY BearsP
RANGE := (-200.000 .. 0.000);
TERM BearsPBom := Bell (-96.460, 7.000, 1.000);
TERM BearsPRuim := Bell (-85.720, 5.000, 0.700);
END_FUZZIFY

FUZZIFY BBDeltaV
RANGE := (0.000 .. 100.000);
TERM BBDVBom := Bell (76.250, 4.000, 1.000);
TERM BBDVRuim := Bell (69.310, 4.000, 1.000);
END_FUZZIFY

FUZZIFY CCI
RANGE := (-400.000 .. -200.000);
TERM CCIBom := Bell (-321.000, 4.000, 2.000);
TERM CCIRuim := Bell (-312.230, 3.000, 2.000);
END_FUZZIFY

FUZZIFY AC
RANGE := (-100.000 .. 0.000);
TERM ACBom := Bell (-32.660, 4.000, 1.000);
TERM ACRuim := Bell (-26.000, 3.000, 1.000);
END_FUZZIFY

DEFUZZIFY saida
RANGE := (-100.000 .. 100.000);
TERM fria := Sigmoid (-50.000, -0.067);
TERM meio := Bell (0.000, 30.000, 2.500);
TERM quente := Sigmoid (50.000, 0.067);

METHOD : COG;
ACCU : MAX;
DEFAULT := nan;
END_DEFUZZIFY

RULEBLOCK 
AND : MIN;
OR : MAX;
ACT : MIN;

RULE 1 : if AD is ADBom then saida is quente
RULE 2 : if AD is ADRuim then saida is fria
RULE 3 : if BearsP is BearsPBom then saida is quente
RULE 4 : if BearsP is BearsPRuim then saida is fria
RULE 5 : if BBDeltaV is BBDVBom then saida is quente
RULE 6 : if BBDeltaV is BBDVRuim then saida is fria
RULE 7 : if CCI is CCIBom then saida is quente
RULE 8 : if CCI is CCIRuim then saida is fria
RULE 9 : if AC is ACBom then saida is quente
RULE 10 : if AC is ACRuim then saida is fria
END_RULEBLOCK

END_FUNCTION_BLOCK